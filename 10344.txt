#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
/*اللهم ارزقنا راحة قبل الموت والشهادة عند الموت والجنة بعد الموت */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
const double EPS = (1e-7);
ll Ceil(ll x, ll y) { return (x + y - 1) / y; }
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
ll power(ll x, ll y, ll mod) {
	if (y == 0) return 1;
	if (y == 1) return x % mod;
	ll r = power(x, y >> 1, mod);
	return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll n, cnt = 0;
ll grid[20][20];
ll vis[20][20];
void ch(int r, int c) {
	if (r >= n || c >= n || grid[r][c] == 'x' || vis[r][c])return;
	/*if (ch( r,  c-1))return 1;
	if (ch(r, c + 1))return 1;
	if (ch(r+1, c ))return 1;
	if (ch(r-1, c ))return 1;*/
	vis[r][c] = 1;
	cnt++;
	ch(r, c - 1);
	ch(r, c + 1);
	ch(r + 1, c);
	ch(r - 2, c);
}
vector<ll>v(5), cur;
void pr(int x) {
	if (x == n) {
		for (int i = 0; i < n; i++)cout << cur[i] << " ";
		cout << endl;
		return;
	}
	for (int j = 1; j <= n; j++)
		if (!v[j - 1]) {
			v[j - 1] = 1;
			cur[x] = j;
			pr(x + 1);
			v[j - 1] = 0;
		}
}
ll f(int m) {
	if (m > n)
		return -2;
	ll k = f(m * 10 + 4) + 1;
	ll b = f(m * 10 + 7) + 2;
	return max(k, b);
}
bool ok(int x, ll sum)
{
	if (x == 5) {
		if (sum == 23)return true;
		else return false;
	}
	bool a = ok(x + 1, sum - v[x]), b = ok(x + 1, sum + v[x]);
		bool c=ok(x + 1, sum * v[x]);
		return a || b || c;
}
int main()
{
	//run();
	M_Sayed;
	ll s;
	while (1) {
		bool b = 0, h = 0;
		for (int i = 0; i < 5; i++) { cin >> v[i]; if (v[i])b = 1; }
		if (!b)break;

		sort(all(v));
		do {
			if (ok(1, v[0])) {
				h = 1;
				break;
			}
		} while (next_permutation(all(v)));
		if (!h)cout << "Impossible\n";
		else 	cout << ("Possible\n");

	}
}
