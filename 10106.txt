#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
/*اللهم ارزقنا راحة قبل الموت والشهادة عند الموت والجنة بعد الموت */
#include <bits/stdc++.h>
#include<unordered_map>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define M7mmed_Sayed run()
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
void fast() {
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
}
ll  gcd(ll x, ll y) { return(y == 0) ? abs(x) : gcd(y, x % y); }
ull lcm(ll x, ll y) { return  abs(x / gcd(x, y) * y); }
ll nCr(ll n, ll r) {
	ll ans = 1;
	ll div = 1;
	if (n)
		for (ll i = r + 1; i <= n; i++) {
			ans = ans * i;
			ans /= div;
			div++;
		}
	return ans;
}
ll fast_power(ll x, ll k, ll mod)
{
	ll ret = 1;
	while (k) {
		if (k & 1) ret = (ret * x) % mod;
		k >>= 1; x = (x * x) % mod;
	}return ret;
}
bool vis[(ll)1e6 + 5];
void save() {
	for (int i = 2; i <= 1e6; i++) {
		if (!vis[i])
		{
			for (int j = 2 * i; j < 1e6; j++) {
				vis[j] = 1;
			}
		}
	}
}
int main()
{
	/*Team Formation ,Do Your Best*/
	//M7mmed_Sayed;
	M_Sayed;
	ll n, m;
	string s, ss;
	while (cin >> s >> ss)
	{
		vector<ll>v(sz(s) + sz(ss));
		reverse(all(s));
		reverse(all(ss));
		for (int i = 0; i < sz(s); i++) {
			if (s[i] == '0')continue;
			for (int j = 0; j < sz(ss); j++) {
				v[i + j] += int(s[i] - '0') * int(ss[j] - '0');
			}
		}
		int carry = 0;
		for (int i = 0; i < sz(v) || carry; i++) {
			if (i == v.size())v.push_back(0);
			v[i] += carry;
			carry = v[i] / 10;
			v[i] %= 10;
		}
		while (sz(v) > 1 && v.back() == 0)v.pop_back();
		reverse(all(v));
		for (int i = 0; i < sz(v); i++)
			cout << v[i];
		cout << endl;
	}
}