#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
using namespace std;
#define endl '\n'
#define ll long long
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define Mo7med_Sayed fast();
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0;
#define mem(dp,n) memset(dp,n,sizeof dp)
const double EPS = (1e-7);
const ll OO = INT_MAX, mod = 1e9 + 7, N = 2e5 + 5;
void run()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
void fast()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
}
ll n, m, d, w, t = 1;
string s;
int dp[1002][1002];
ll solve(int l, int r) {
	if (l>=r)return 0;
	int& ret = dp[l][r];
	if (~ret)return ret;
	ret = 1e9;
	if (s[l] == s[r]) {
		return ret= solve(l + 1, r - 1);
	}
	else {
		return ret=min(solve(l + 1, r), solve(l, r - 1)) + 1;
	}
}
set<int>li;
string ba, fr,md;

void build(int l, ll r)
{
	if (l == r) {
		md.push_back(s[l]);
		
	}
	else if (l + 1 == r && s[l] == s[r]) {
		ba.push_back(s[l]);
	}
	else  if (s[l] == s[r]) {
		ba.push_back(s[l]);
		build(l + 1, r - 1);
	}
	else if (solve(l + 1, r) < solve(l, r-1)) 
	{
		ba.push_back(s[l]);
		build(l + 1, r );
	}
	else 
	{
		ba.push_back(s[r]);
		build(l , r-1);		
	}
	
}
void solve()
{

	while (getline(cin, s)&&sz(s)) {
		for (int i = 0; i < sz(s); i++) {
			for (int j = 0; j < sz(s); j++)dp[i][j] = -1;
		}
	ba.clear();
	md.clear();
		cout << solve(0, sz(s) - 1)<<" ";
		build(0, sz(s) - 1);
		cout << ba << md;
		reverse(all(ba));
		cout << ba << endl;
	}
}
int main()
{
	run();
	Mo7med_Sayed;

	while (t--)
	{
		solve();
	}

}