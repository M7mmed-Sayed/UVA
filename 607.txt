#define _CRT_SECURE_NO_WARNINGS
//\*                   وتزودوا فإن خير الزاد التقوى                     */
// \*      وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define MP	make_pair
#define watch(x) cerr<<#x<<" = { "<<x<<" }\n"
#define mem(dp,a) memset(dp,a,sizeof (dp))
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
const ll  mod = (1e9 + 7), OO = 1e9;
ll ceil(ll x, ll y) { return (x + y - 1) / y; }
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
ll power(ll x, ll y, ll mod) {
	if (y <= 1) return max(1ll, x * y) % mod;
	ll r = power(x, y >> 1, mod);
	return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll n, m, k, t;;
vector<int>v;
ll dp[1001][1001];
ll fun(ll a) {
	if (!a)return 0;
	if (a <= 10)return -m;
	return ((a - 10) * (a - 10));
}
ll solve(int ind,int lec) {
	
	if (ind >= n)
	{
		if (lec != 0)return 1e9;
		return 0;
	}
	ll &ret = dp[ind][lec];
	if (~ret)return ret;
	ret = 1e10;
	ll sum = 0;
	for (int i = ind; i < n; i++) {
		if (sum + v[i] > k) 
			break;
		sum += v[i];
		ret = min(ret, solve(i + 1, lec - 1) + fun(k - sum));
	}
	return ret;
}
ll solv(int ind, int mn) {

	if (ind >= n)
	{
		return 1;
	}
	if (mn >= v[ind]) {
		return (solv(ind + 1, mn - v[ind]));
	}
	else return 1 + solv(ind, k);
}
int main()
{
	run();
	M_Sayed;
	ll c = 0;
	while (cin>>n&&n) {
		v.clear();
		if (c)cout << endl;
		cin >> k >> m;
		v.resize(n);
		mem(dp, -1);
		for (auto& i : v)cin >> i;
		cout << "Case " << ++c<< ":\n";
		ll sum=0, lec = 1;
		for (auto i : v)
		{
			sum += i;
			if (sum > k) {
				sum = i;
				lec++;
			}
		}
		lec=(solv(0, k));
		mem(dp, -1);
		cout << "Minimum number of lectures: "<<lec<<endl;
		cout << "Total dissatisfaction index: "<< solve(0, lec) <<endl;
	}

}