#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = { "<<x<<" }\n"
#define mem(dp,a) memset(dp,a,sizeof (dp))
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
ll Ceil(ll x, ll y) { return (x + y - 1) / y; }
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
ll power(ll x, ll y, ll mod) {
	if (y == 0) return 1;
	if (y == 1) return x % mod;
	ll r = power(x, y >> 1, mod);
	return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll n, m, k,s,t;
vector<int>A;
map < pair<int, pair<int, int>>,int>dp;
int solve(int x,int y,int c)
{
	if (c > k) {
	 return 1e9;
	}
	if (y < x)return 0;
	int &ret = dp[{x, { y,c }}];
	if (ret)return ret;
	 ret = 1e9;
	if (A[x] == A[y])return solve(x + 1, y - 1, c);
	ret = min(ret, 1 + solve(x + 1, y, c + 1));
	ret = min(ret, 1 + solve(x, y - 1, c + 1));
	return ret;
}
int main()
{
	//run();
	M_Sayed;
	cin >> t;
	m = 1;
	while (t--)
	{
		cout << "Case " << m++ << ": ";
		cin >> n >> k;
		dp.clear();
		A.clear();
		A.resize(n);
		for (auto& i : A)cin >> i;
		ll sol = solve(0, n - 1, 0);
		if (!sol)cout << "Too easy\n";
		else if (sol>k)cout << "Too difficult\n";
		else {
			cout << sol << endl;
		}
	}
}