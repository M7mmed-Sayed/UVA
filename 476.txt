#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
/*اللهم ارزقنا راحة قبل الموت والشهادة عند الموت والجنة بعد الموت */
#include <bits/stdc++.h>
#include<unordered_map>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
const double EPS = (1e-7);
ll Ciel(ll x, ll y) {return (x + y - 1) / y;}
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#endif
}
void fast() {ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);}
ll  gcd(ll x, ll y) { return(y == 0) ? abs(x) : gcd(y, x % y); }
ull lcm(ll x, ll y) { return  abs(x / gcd(x, y) * y); }
ull nCr(ll n, ll r) {
	ull ans = 1, div = 1;
	if (n)
		for ( ll i = r + 1; i <= n; i++) {
			ans = ans * i;
			ans /= div++;}
	return ans;}
ull nPr(ll n, ll r) {
	if (r > n)return 0;
	ull ans = 1, cnt = n-r+1;
	cout <<cnt << endl;
	while (cnt <= n)ans *= cnt++;
	return ans;
}
ll fast_power(ll x, ll y, int mod) {
	if (y == 0) return 1;
	if (y == 1) return x % mod;
	ll r = fast_power(x, y >> 1, mod);
	return (((r * r) % mod) * fast_power(x, y & 1, mod)) % mod;
}
bool vis[(ll)1e6 + 5];
void save() {
	for (int i = 2; i <= 1e6; i++) {
		if (!vis[i])
		{for (int j = 2 * i; j <= 1e6; j+=i) {vis[j] = 1;}}}
}
vector<long long >v(5);
long long  solve(long long  id, long long  cnt, long long  me, long long  cur)
{if (id == 5)
		return (cnt & 1) ? -me / cur : me / cur;
	long long  ret = 0;
	ret += solve(id + 1, cnt, me, cur);
	ret += solve(id + 1, cnt + 1, me, lcm(cur, v[id]));
	return ret;
}
int main()
{
	run();
	M_Sayed;
	char c;
	cin >> c;
	vector < pair < pair< pair<double, double>, double>, double>>v;
	while (c != '*') {
		double x1, y1, x2, y2;
		cin >> x1 >> y1 >> x2 >> y2;
		v.push_back({ { {x1,y1 }, x2 }, y2 });
		cin >> c;
	}
	double n, m;
	ll k = 1;
	while (cin >> n >>m) {
		if (m == 9999.9 && n == 9999.9)
			break;
		//cout << n << " " << m << endl;
		bool b = 1;
		for (int i = 0; i < sz(v); i++) {
			//cout << v[i].first.first.second << " " << v[i].second << endl;
			if (n > v[i].first.first.first&&n<v[i].first.second) {
				if (m < v[i].first.first.second && m > v[i].second) {
					cout << "Point " << k << " is contained in figure " << i + 1 << endl;;
					b = 0;
				}
			}
		}
		if (b)cout << "Point " << k << " is not contained in any figure\n";
		k++;
	}
	
}