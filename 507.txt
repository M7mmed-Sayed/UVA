#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
//#include<unordered_map>
using namespace std;
#define Ma7moud_7amdy                 \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
#define Open_Sesame Open()
#define all(v) ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(arr, x) memset(arr, x, sizeof arr)
#define endl "\n"
#define Accepted 0
#define watch(x) cout << #x << " = " << x << endl;
#define RT(x) return cout << (x), 0;
#define sc(a) scanf("%d", &a)
#define scll(x) scanf("%I64d", &x)
#define scan(s) scanf("%[^\n]%*c", &s)
#define pr(s) printf("%s", s.c_str()); // print string
typedef long long ll;
const int dx[] = { 1, 0, -1, 0, 1, 1, -1, -1 };
const int dy[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
const int Mx = INT_MAX;
const int Mn = INT_MIN;
const ll MX = LLONG_MAX;
const ll MN = LLONG_MIN;
const double PI = acos(-1.0);
void Open()
{
#ifndef ONLINE_JUDGE
	freopen("Input.txt", "r", stdin);
	freopen("Output.txt", "w", stdout);
#endif
}
const double EPS = -1e-2;
const ll mod = ll(1e9 + 7);
const int N = 2e5 + 5;

//“Nobody but you have to believe in your dreams to make them a reality.” ― Germany Kent
int arr[20005];
int main() {
	// Ma7moud_7amdy;
	Open_Sesame;
	int TC;
	scanf("%d", &TC);
	for (int T = 1; T <= TC; T++) {
		int n;
		sc(n);
		for (int i = 0; i < n - 1; i++)sc(arr[i]);
		ll maxSum, curWinSlid;
		int l = 0, curLen = 0, st = 0, ed = 0;
		maxSum = curWinSlid = 0;
		for (int i = 0; i < n - 1; i++) {
			if (curWinSlid < 0)curWinSlid = arr[i], l = i;
			else curWinSlid += arr[i];

			if (maxSum < curWinSlid) {
				maxSum = curWinSlid;
				st = l;
				ed = i + 1;
			}
			else if (maxSum == curWinSlid) {
				if (ed - st + 1 < i - l + 1) {
					curLen = i - l + 1;
					st = l;
					ed = i + 1;
				}
			}
		}
		if (maxSum > 0)
			printf("The nicest part of route %d is between stops %d and %d\n", T, st + 1, 1 + ed);
		else
			printf("Route %d has no nice parts\n", T);
	}
}