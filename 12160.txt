#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define mem(dp,x)  memset(dp,x,sizeof dp);
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = "<<x<<" \n"
#define sz(n) n.size()
#define M_Sayed fast()
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
#define MP					make_pair
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
const ll  mod = (1e9 + 7), OO = 1e9,N=10000+1;
ll Ceil(ll x, ll y)
{
    return (x + y - 1) / y;
}
void run()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
     freopen("output.txt", "w", stdout);
#else
    //freopen("input", "r", stdin);
    //freopen("output", "w", stdout);
#endif
}
void fast()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
ll n,m,r,test=1,cit;
vector<vector<int>>adj;
vector<int>nu;
char city;
int vis[N],path[N];
vector<int>ans;
void bfs()
{
    queue<pair<int,int>>q;
    n%=10000;
    q.push({n,0});
    bool ok=0;
    vis[n]=1;
    while(sz(q))
    {
        int k=q.front().first,dep=q.front().second;
        q.pop();
        k%=10000;
        for(auto i:nu)
        {
            int ans=i+k;
            ans%=10000;
            if(vis[ans])continue;
            vis[ans]++;
            q.push({ans,dep+1});
            if(ans==m){
              cit=dep+1;
             ok=1;
             break;
            }
        }
        if(ok)break;
    }
}
int main()
{
    run();
    M_Sayed;
    while(cin>>n>>m>>r){
        mem(vis,0);
        if(!n&&!m&&!r)RT("");
      cout<<"Case "<<test++<<": ";
       nu= vector<int>(r);
       for(auto&i:nu)cin>>i;
       cit=-1;
       bfs();
       if(~cit)cout<<cit<<endl;
       else cout<<"Permanently Locked\n";

    }


}