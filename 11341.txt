	#define _CRT_SECURE_NO_WARNINGS
	//\*                   وتزودوا فإن خير الزاد التقوى                     */
	// \*      وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
	#include <bits/stdc++.h>
	#include<unordered_map>
	#include<fstream>
	using namespace std;
	#include<iostream>
	#define endl '\n'
	#define ll long long
	#define ull unsigned long long
	#define dll double
	#define PI acos(-1)
	#define MP	make_pair
	#define watch(x) cerr<<#x<<" = { "<<x<<" }\n"
	#define mem(dp,a) memset(dp,a,sizeof (dp))
	#define sz(n) n.size()
	#define M_Sayed fast() 
	#define all(v) v.begin(),v.end()
	#define allr(v) v.rbegin(),v.rend()
	#define RT(v) return cout<<v,0
	int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
	int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
	const double EPS = (1e-7);
	const ll  mod = (1e9 + 7), OO = 1e9;
	ll ceil(ll x, ll y) { return (x + y - 1) / y; }
	void run() {
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#else
	#endif
	}
	ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
	ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
	ll power(ll x, ll y, ll mod) {
		if (y <= 1) return max(1ll, x * y) % mod;
		ll r = power(x, y >> 1, mod);
		return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
	}
	void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
	ll n, m, k, t;;
	int dp[11][102];
	vector < vector<pair<int, int>>>ex;
	int solve(int ind, int ho) {

		if (ind == n)return 0;
		int& ret = dp[ind][ho];
		if (~ret)return ret;
		ret = -10000000;
		for (int i = 0; i <sz(ex[ind]); i++) {
			if (ex[ind][i].first > 4 && ex[ind][i].second <= ho)
				ret = max(ret, solve(ind + 1, ho - ex[ind][i].second) + ex[ind][i].first);
		}
		return ret;
	}
	int main()
	{
		run();
		M_Sayed;
		cin >> t;
		cout << fixed << setprecision(2);
		while (t--) {
			cin >> n >> m;
			mem(dp, -1);
			ex.clear();
			ex.resize(n);
			for (int i = 0; i < n; i++)
				for (int j = 1; j <= m; j++) {
				cin >> k;
				if (!sz(ex[i]) || ex[i].back().first != k) {
					ex[i].push_back({ k,j });
				}
			}
			double re = ((solve(0, m) * 1.0+EPS) / n);
			if (re <= 0)cout << "Peter, you shouldn't have played billiard that much.\n";
			else {
				cout << 	"Maximal possible average mark - "<<re<<".\n";
			}
		}

	}