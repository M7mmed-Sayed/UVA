#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
/*اللهم ارزقنا راحة قبل الموت والشهادة عند الموت والجنة بعد الموت */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
ll Ceil(ll x, ll y) { return (x + y - 1) / y; }
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
ll power(ll x, ll y, ll mod) {
	if (y == 0) return 1;
	if (y == 1) return x % mod;
	ll r = power(x, y >> 1, mod);
	return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll n, cnt = 0;
ll gr[100][100];
bool val(ll a, ll b)
{
	return (a >= 0 && a < n && b >= 0 && b < n);
}
bool valid1(int x, int y, int a)
{
	if (!val(x, y))
		return true;
	if (gr[x][y])return false;
	return valid1(x + dx[a], y + dy[a], a);

}
bool valid(int i, int j) {
	bool t = 1;
	for (int k = 0; k < 8; k++) {
		t &= valid1(i, j, k);
	}
	return t;
}
set<vector<ll>>st;
void sol(int r)
{
	if (r == n) {
		vector<ll>vv(n);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (gr[i][j]) vv[j] = i;
			}
		}
		if (st.find(vv) == st.end())
		{
			st.insert(vv);
			for (int i = 0; i < sz(vv); i++)
				cout << vv[i] << " ";
			cout << endl;
		}
		
		//n = -1;
		return;
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (valid(i, j)) {
				gr[i][j] = 1;
				sol(r + 1);
				gr[i][j] = 0;
			}
		}
	}
}
int col[101];
int digr[101];
int digl[101];
int row[101];
void solve2(int r,  int cnt)
{
	if (cnt == n)//cout
	{
		vector<ll>vv(n);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (gr[i][j]) vv[j] = i;
				//cout << gr[i][j] << " ";
			}
		}
		if (st.find(vv) == st.end())
		{
			st.insert(vv);
		}
		return;
	}
	if (row[r])
	{
		solve2(r + 1,  cnt);
		return;
	}
	for(int c=0;c<n;c++)
	{
		if (digr[r + c] || digl[(r - c) + n - 1] || col[c])
			continue;
		digr[r + c] = digl[(r - c) + n - 1] =col[c] = 1,row[r]=1;
			gr[r][c] = 1;
			solve2(r, cnt + 1);
			gr[r][c] = 0;
			digr[r + c] = digl[(r - c) + n - 1] = col[c]=row[r] = 0;
	}
}
int main()
{
	//run();
	M_Sayed;
	n = 8;
	int x, y=1;
	solve2(0,0);
	while (cin >> x) {
		vector<ll>h(8);
		h[0] = x-1;
		ll mn = 1e9;
		for (int i = 1; i < 8; i++) { cin >> h[i]; h[i]--; }
		for (auto it : st) {
			ll sum = 0;
			for (int i = 0; i < 8; i++) {
				if(abs(h[i] - it[i])!=0)sum++;
			}
			mn = min(sum, mn);
		}
		cout <<"Case "<<y++<<": "<< mn << endl;;
	}
	
}