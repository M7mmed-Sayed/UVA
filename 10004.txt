#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define mem(dp,x)  memset(dp,x,sizeof dp);
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = "<<x<<" \n"
#define sz(n) n.size()
#define M_Sayed fast()
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
#define MP					make_pair
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
const ll  mod = (1e9 + 7), OO = 1e9,N=1e4+5;
ll Ceil(ll x, ll y)
{
    return (x + y - 1) / y;
}
void run()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen("input", "r", stdin);
    //freopen("output", "w", stdout);
#endif
}
void fast()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
ll n,m,test=1,cit;
vector<vector<int>>adj;
char city;
int vis[222];
int x1=0,y2=0;
void dfs(int u,bool c)
{
    for(auto v:adj[u] )
    {
        if(vis[v]==vis[u])
        {
            cit=1;
            return ;
        }
        if(vis[v]==test)
        {
            vis[v]=!c;
            dfs(v,!c);
        }
    }
}
int main()
{
    run();
    M_Sayed;
    test=-1;
    mem(vis,-1);
    while(cin>>n)
    {
        if(!n)RT("");
        cin>>m;
        adj=vector<vector<int>>(n);
        while(m--)
        {
            int x,y;
            cin>>x>>y;
            adj[x].push_back(y);
            adj[y].push_back(x);
        }
        cit=0;
        mem(vis,-1);
        for(int i=0; i<n; i++)
        {
            if(vis[i]==test)
            {
                vis[i]=0;
                dfs(i,0);
            }
        }
        if(cit)cout<<"NOT BICOLORABLE.\n";
        else cout<<"BICOLORABLE.\n";
    }

}