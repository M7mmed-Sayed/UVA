#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<fstream>
using namespace std;
#include<iostream>
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define dll double
#define PI acos(-1)
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define M_Sayed fast() 
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
ll Ceil(ll x, ll y) { return (x + y - 1) / y; }
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
ll power(ll x, ll y, ll mod) {
	if (y == 0) return 1;
	if (y == 1) return x % mod;
	ll r = power(x, y >> 1, mod);
	return (((r * r) % mod) * power(x, y & 1, mod)) % mod;
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll n, m;

int arr[505][505];
int main()
{
	//run();
	M_Sayed;
	ll k;
	n = 50;
	ll h,w,n, s;
	while (cin >>w>>h>>n)
	{
		if (!n && !h && !w)return 0;
		
		for (int i = 0; i <= w; i++) {
			for (int j = 0; j <= h; j++)
			 arr[i][j]=1;
		}
		ll x1, y1, y2, x2;
		while (n--)
		{
			cin >> x1 >> y1 >> x2 >> y2;
			
			for (int i = min(x1, x2)-1; i < max(x1, x2); i++) {
				for (int j = min(y1, y2) - 1; j < max(y1, y2); j++)
				{
					(arr[i][j] = 0);
				}
			}
		
		}
		ll cnt = 0;
		for (int i = 0; i < w; i++) {
			for (int j = 0; j < h; j++)
				cnt+=arr[i][j];
		}
		if (cnt == 0)cout<<"There is no empty spots.\n";
		else if(cnt==1)cout << "There is one empty spot.\n";
		else cout << "There are "<<cnt<<" empty spots.\n";
	}
}

	