#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
using namespace std;
#define endl '\n'
#define ll long long
#define sz(n) n.size()
#define M_Sayed fast() 
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#endif
}
void fast() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }
ll sum = 0, n, c = 0;
vector<ll>v, vis(50);
int dp[1005][50006] = { -1 };
ll arr[1000];
int col[101];
int digr[101];
int digl[101];
int row[101];
ll gr[100][100];
set<vector<ll>>st;
void solve2(int r, int cnt)
{
	if (cnt == n)//cout
	{
		vector<ll>vv(n);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (gr[i][j]) vv[j] = i+1;
				//cout << gr[i][j] << " ";
			}
		}
		if (st.find(vv) == st.end())
		{
			st.insert(vv);
		}
		return;
	}
	if (row[r])
	{
		solve2(r + 1, cnt);
		return;
	}
	for (int c = 0; c < n; c++)
	{
		if (digr[r + c] || digl[(r - c) + n - 1] || col[c])
			continue;
		digr[r + c] = digl[(r - c) + n - 1] = col[c] = 1, row[r] = 1;
		gr[r][c] = 1;
		solve2(r, cnt + 1);
		gr[r][c] = 0;
		digr[r + c] = digl[(r - c) + n - 1] = col[c] = row[r] = 0;
	}
}
int main()
{
	run();
	M_Sayed;
	string s;
	n = 8;
	ll t=1;
	solve2(0, 0);
	cin >> t;
	while (t--)
	{
		ll x, y;
		ll cnt = 0;
		cin >> x >> y;
		ll mx = 0;
		cout << "SOLN       COLUMN\n";
		cout << " #      1 2 3 4 5 6 7 8\n\n";
		for (auto it : st) {
			if (it[y-1] == x)
			{
				cout << setw(2) << ++cnt << "      "<<it[0];
				for (int i = 1; i < 8; i++) {
					cout << " "<<it[i] ;
				}
				cout << endl;
			}
		}
		if (t)cout << endl;
	}
	
}