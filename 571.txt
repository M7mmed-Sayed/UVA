#define _CRT_SECURE_NO_WARNINGS
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include <bits/stdc++.h>
#include<unordered_map>
#include<iomanip>
#include<climits>
#include<fstream>
using namespace std;
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define mem(dp,x)  memset(dp,x,sizeof dp);
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = "<<x<<" \n"
#define sz(n) n.size()
#define M_Sayed fast()
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0
#define MP					make_pair
int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const double EPS = (1e-7);
const ll  mod = (1e9 + 7), OO = 1e9,N=2e5+5;
ll Ceil(ll x, ll y)
{
    return (x + y - 1) / y;
}
void run()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen("input", "r", stdin);
    //freopen("output", "w", stdout);
#endif
}
void fast()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
ll A,B,X,a,btest=1,cit;
int main()
{
   // run();
    M_Sayed;
    while(cin>>A>>B>>X)
    {
        int a=0,b=0;
        if(A==X){
            cout<<"fill A\nsuccess\n";
            continue;
        }
        if(B==X){
            cout<<"fill B\nsuccess\n";
            continue;
        }
        while(true)
        {
            if(b==0)
            {
                cout<<"fill B\n";
                b=B;
            }
            if(a==A){
                a=0;
                cout<<"empty A\n";
            }
            if(A-a<=b){
                cit=A-a;
                a+=cit;
                b-=cit;
            }
            else
            {
                a+=b;
                b=0;
            }
            cout<<"pour B A\n";
            if(b==X||a==X){cout<<"success\n";break;}
        }
    }

}
