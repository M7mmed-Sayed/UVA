#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
/*                   وتزودوا فإن خير الزاد التقوى                    */
/*       وما تدري نفس ماذا تکسب غدا وما تدري نفس باي ارض تموت      */
#include<unordered_map>
using namespace std;
#define endl '\n'
#define ll long long
#define PI acos(-1)
#define watch(x) cerr<<#x<<" = { "<<x<<" }\n"
#define sz(n) n.size()
#define Mo7med_Sayed fast();
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define RT(v) return cout<<v,0;
#define mem(dp,n) memset(dp,n,sizeof dp)
const double EPS = (1e-7);
const ll OO = INT_MAX, mod = 1e9 + 7, N = 2e5 + 5;
void run() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#else
#endif
}
ll gcd(ll a, ll b) { return !b ? abs(a) : gcd(b, a % b); }
ll lcm(ll a, ll b) { return abs(a / gcd(a, b)) * b; }
void fast()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
}

ll  n, m, x, k, t, s;
ll dp[70][70][2];
vector<ll>v;
ll solve(int ind, int s, bool ok) {

	if (s < 0)
		return 0;
	if (ind == n) {
		return s == 0;
	}
	ll& ret = dp[ind][s][ok];
	if (~ret)
		return ret;
	ret = 0;
	ret += solve(ind + 1, s, 0);
	ret += (ok ? solve(ind + 1, s - 1, ok) : solve(ind + 1, s, 1));
	
	return ret;
}
int main()
{
	run();
	Mo7med_Sayed;
	while (cin >> n >> s)
	{
		mem(dp, -1);
		if (n < 0)RT("");
		cout << solve(0, s, 1) << endl;
	}

}